AI : it is branch of computer science namely known as "Artificial Intelligence",
	 whose main aim to predict,behave and mimic,think like humans.
	 "Artificial" is related to main-made.
	 
	 we want to build machine(Intelligence Machine) which could persist/copy the 
	 Intelligence like humans.
	 
	 Intelligence System :-
	 1. General AI : it some what like human it makes mistake on the basis 
	 trial and error and it learns from mistake.
	 
	 Human ----> Mistake ----> Learning
	 confidence Score (effeciency) (0,1) 0r (0 to 100%)
	 like effeciency can never 100% confidence will also Range = 0<cf(s)<1
	 effeciency = output
				  ------
				  input 
	  cf(s)  =  Output case   Output Dataset By Agent
				----------- = -----------------------
				 input case    Input Dataset (csv,sql)
		At Every iterations cf(s) factor will increase.
		
		logic = Predicate Logic
		Rules keeps changing 
		Baye's(Naive Baye's) Theoram of Probability 
		
	 2. Rule Based
			This not a exactly a Ai but it behave turing machine.
			Every program you make in computer will act as Turing machine.
			Program take some set input perform computation on in the input
			on the basis context free grammer (rules) for the defined 
			set of states.(finite states).

			cf(s) = 0 or 1
		logic = digital logic 
		1. probability of possible event (must)
		2. probability of impossible event (never)
		Rules fixed.
		
Design a Turing Machine Named Munna which can convert any number into numeric words.
The Problem statement : NLP (Natural Langauge Processing)

55
fifty five 
Range 0 to 100

Logic :-
=========
79 
70+9 
70+1
70+2
79+3
...
...
...
70+9 : Seventy 


41 divide 10 
q = 4
r = 1               
q*10 = 40 => tens = ['ten','twenty','thirty','forty']
r = 1

units = ['zero','one','two','three','four','five','six','seven','eight','nine']
number_word = tens[q-1]
next_word = units[r]
	41 => forty one 
	
How to calculate confidence Score :-
====================================
	inputs = set([9,5,40,30,11,50,60,70,12,23,10,10,10])
	unique _input = len(inputs)
	
	output = ['nine','Five','forty','thirty']

	machine_output = []


Working with Mathematical Implementation of AI :-
=================================================
we know that AI is a combination of computer and mathematics.
Our Main Agenda to build Intelligent Machines or System.
And the foundation of any Intelligent machine is foundational Mathematical.
and computational mathematics.

in Order to work foundational mathematical concept we have libraries like 
1. numpy : Numerical Python (All foundational mathematical concept derive)
2. pandas : for large of data set in form data frames, in form of csv, data cleaning and data process 
	dropna and fillna 
	dropna : missing drop 
	fillna : missing fill 
	
	data conversion
	csv to txt 
	csv to excel
	csv to pdf.
	
	Data Handlying,data processing,data cleaning.
	
3. matplotlib 
	for 2d graphs,charts,visualisation
4. seaborn 
	used for Advance visualisation technique into histograms,heatmaps,insights,trends.
	
5. pydantic/Marshmallow : used for validations in ETL Pipelines
              ETL : Extract transform Load.
			  Data will be stored at Data ware house.

6. pickle : used for serialization and deserialisiation 
			if you want to use your own model and save them for later use.
			my_model.pkl 
   pickle has one advance framework joblib used for serialization and deserialisiation
   of model into pickel file.
   
zip data structure:-
=====================
zip data structure a special datastrcture used in ML,and AI to represent paired data set.
like wise python has primitive data structure like tuple,strings,list,dictionary,set,frozenset,
range.
But sometime we want to keep some data as pair of Heterogenous data items for this purpose 
we go for zip.
dictionary is also kind of zipped or paired datastrcture.

Data structure overview :-
=========================
it is a paired combination of tuple inside list.

names = ['ravi','krishna','aman']
scores = [50,40,70]

[('ravi',50),('krishna',40),('aman',70)]

Data structure use case:-
1. database connections data from the database will zipped ds
2. pandas clustured data will be zipped ds.
3. in ML many vectors and matrix in form in zipped ds

1. similar size (equal size)
	len(a) = len(b) = min or max 
2. different size (unequal size) 
	len(a) != len(b)
	1. first list is bigger 
		len(a) > len(b)
	2. 2nd list is bigger.
		len(b) > len(a)
	
1. always shortest list gets the preference.
2. extra elements are discarded.
3. data is highely ranked.

computation in multiple dimensional Array :-
===========================================
in numerical computation in AL and ML with respect to data, there are 3 types of operations 
1. scalar computation
	Data when represented or computed at 1d array is called scalar computation
2. vector computation (2d matrix)
	data when represented or computed in 2d array is called vector computation
3. tensor computation (3d-matrix)
	data when represented or computed in 3d array is called tensor computation

Note : nth dimension computation practically not possible for the machine because it will 
high gpu and memory acceleration.
in that we have concept of ranking.























	
	
	
	
	
	
	
	








 

















   
			
			














































			
			
			
			
			
			
			
			